name: Sharding Test

on:
  workflow-call:
  pull_request:
    branches: [ main ]
    paths:
      - 'server/backend/database/**'

env:
  GO_VERSION: '1.21'

jobs:
  sharding_test:
    name: sharding_test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get tools dependencies
      run: make tools

    - name: Check Docker Compose Version
      run: docker compose --version

    - name: Run the Config server, Shard 1 and Shard 2
      run: docker compose -f build/docker/sharding/docker-compose.yml up --build -d --wait config1 shard1-1 shard2-1

    - name: Initialize the Config server
      run: docker compose -f build/docker/sharding/docker-compose.yml exec config1 mongosh test /scripts/init-config1.js

    - name: Initialize the Shard 1
      run: docker compose -f build/docker/sharding/docker-compose.yml exec shard1-1 mongosh test /scripts/init-shard1-1.js

    - name: Initialize the Shard 2
      run: docker compose -f build/docker/sharding/docker-compose.yml exec shard2-1 mongosh test /scripts/init-shard2-1.js

    - name: Run the Mongos
      run: docker compose -f build/docker/sharding/docker-compose.yml up --build -d --wait mongos1

    - name: Initialize the Mongos
      run: docker compose -f build/docker/sharding/docker-compose.yml exec mongos1 mongosh test /scripts/init-mongos1.js

    - name: Run the tests with sharding tag
      run: go test -tags sharding -race -v ./test/sharding/...
